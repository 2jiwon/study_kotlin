plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    namespace 'com.fancytank.mypaws'
    compileSdk 35

    defaultConfig {
        applicationId "com.fancytank.mypaws"
        minSdk 24
        //noinspection EditedTargetSdkVersion
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // API key
        def properties = new Properties()
        def keystoreFile = rootProject.file(".properties")
        if (keystoreFile.exists()) {
            properties.load(new FileInputStream(keystoreFile))
        }
        def apiKey = properties.getProperty("OPENAI_API_KEY") ?: ""
        buildConfigField "String", "OPENAI_API_KEY", "\"${apiKey}\""
    }

    buildFeatures {
        buildConfig = true // BuildConfig 필드 활성화
        compose true  // Jetpack Compose 활성화
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.8" // 최신 버전으로 설정
    }

    composeCompiler {
        reportsDestination = layout.buildDirectory.dir("compose_compiler")
        stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
    }

    packagingOptions {
        resources {
            excludes += ["META-INF/LICENSE.md", "META-INF/LICENSE", "META-INF/NOTICE.txt", "META-INF/NOTICE.md"]
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.compose.runtime:runtime-android:1.7.8'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // Spalsh screen API
    implementation("androidx.core:core-splashscreen:1.0.1")

    // http library
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    // json library
    implementation("com.squareup.moshi:moshi:1.12.0")

    // Room
    implementation 'androidx.room:room-runtime:2.5.0'
    // Room Annotation Processor
    kapt "androidx.room:room-compiler:2.5.0"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:33.8.0')
    // When using the BoM, don't specify versions in Firebase dependencies
    // Add the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics'

    // Firebase
    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'

    // Credential Manager
    implementation "androidx.credentials:credentials:1.3.0"
    implementation "androidx.credentials:credentials-play-services-auth"
    implementation "com.google.android.libraries.identity.googleid:googleid:1.1.1"

    implementation 'com.google.android.gms:play-services-base:18.2.0'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    def composeBom = platform('androidx.compose:compose-bom:2025.02.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.foundation:foundation'
    implementation 'androidx.compose.ui:ui'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.10.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'

    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.7")
}